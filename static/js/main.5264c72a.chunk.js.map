{"version":3,"sources":["components/Contact/ContactsList.js","components/Form/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactsList","contacts","onDeleteContact","map","id","name","number","className","onClick","ContactForm","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","placeholder","onChange","disabled","Component","Filter","onChangle","contacTest","App","filter","addContact","newContact","uniqueId","find","contact","alert","prevState","deleteContact","contactId","changeFilter","normalize","toLowerCase","visibleContacts","includes","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5264c72a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './ContactsList.css';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className=\"item__contact\">\r\n        <p className=\"item__text\">{name}</p>\r\n        <p className=\"item__text\">{number}</p>\r\n        <button className=\"item__buttom\" onClick={() => onDeleteContact(id)}>\r\n          стерти\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default ContactsList;\r\n","import React, { Component } from 'react';\r\nimport './ContactForm.css';\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"item__form\" onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Ім’я\r\n          <input\r\n            className=\"item__input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Jony Dep\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Телефон\r\n          <input\r\n            className=\"item__input\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"111-11-11\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={name === '' || number === ''}>\r\n          Зберегти контакт\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default ContactForm;\r\n","import './Filter.css';\r\nconst Filter = ({ value, onChangle }) => (\r\n  <label className=\"item__filter\">\r\n    <p className=\"item__text-filter\">Пошук контактів</p>\r\n    <input\r\n      className=\"item__element\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChangle}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React from 'react';\nimport ContactsList from './components/Contact/';\nimport { v4 as uniqueId } from 'uuid';\nimport ContactForm from './components/Form/';\nimport Filter from './components/Filter/';\nimport './App.css';\nconst contacTest = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nclass App extends React.Component {\n  state = {\n    contacts: contacTest,\n    filter: '',\n  };\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uniqueId(),\n      name,\n      number,\n    };\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert(`${newContact.name} з таким ім’ям вже є.`);\n      return;\n    }\n\n    this.setState(prevState => ({\n      contacts: [newContact, ...prevState.contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const normalize = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalize),\n    );\n\n    return (\n      <div className=\"Containet\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangle={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}